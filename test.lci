# â€” Booleans ----------------------------------------

# These are the important facts about booleans & their operations
#
#     If True  M N  -->*  True  M N  -->*  M
#     If False M N  -->*  False M N  -->*  N

#     Not True  -->* False
#     Not False -->* True

#     And True  True  -->* True      Or True  True  -->* True
#     And True  False -->* False     Or True  False -->* True
#     And False True  -->* False     Or False True  -->* True
#     And False False -->* False     Or False False -->* False

True  = \t.\f.t;
False = \t.\f.f;
Not   = \b. b False True;
And   = \b.\c. (b c False);
Or    = \b.\c. (b True c);
If    = \b.\x.\y. b x y;

# --- Pairs -----------------------------------------------------------

# These are the important facts about pairs & their operations
#
#    Fst (Pair M N) -->* M
#    Snd (Pair M N) -->* N

Pair = \x.\y. \b. b x y;
Fst = \p.p True;
Snd = \p.p False;

# --- Arithmetic functions --------------------------------------------

# These are the important facts about Church numerals
#
#    Succ n    -->*  (n+1)
#    Plus  n m -->*  (n+m)
#    Times n m -->*  (nm)
#
#    Pred n    -->*  (n-1)  if n > 0
#    Pred 0    -->*  0
#    Monus n m -->*  (n-m)  if n > m
#    Monus n m -->*  0      if n <= m
#
#    IsZero n  -->*  True   if n == 0
#    IsZero n  -->*  False  if n > 0
#
#    0 M N    -->*  N
#    1 M N    -->*  M N
#    2 M N    -->*  M (M N)
#    3 M N    -->*  M (M (M N))
#    4 M N    -->*  M (M (M (M N)))
#    ...etc...

Succ = \n.\f.\x. n f (f x);
Pred = \n. Fst (n (\p.Pair (Snd p) (Succ (Snd p))) (Pair 0 0));
Plus = \n.\m.\f.\x. n f (m f x);
Times = \n.\m.\f. n (m f);    # Yet another way of defining products.
Monus = \n.\m. m Pred n;

IsZero = \n. n (\x.False) True;


# --- Fixed point combinators -----------------------------------------

Y = \f.(\x.f(x x))(\x.f(x x));

###################################################################
# Feel free to add any other helper definitions you need.

# 1. Fib
Fib = \n. Fst (n (\p.Pair (Snd p) (Plus (Fst p) (Snd p))) (Pair 0 1));


# 2. Step and Tnpo



# 3. Encoding lists: Nil, Cons, IsNil, Head, Tail



# 4. Length



# 5. Encoding sets (as characteristic functions)




# 6. Russell's Paradox





########################################################
# The last part of the assignment goes in eval-order.txt




# --- LAB EXERCISE: INTEGERS







